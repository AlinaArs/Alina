# 1
name = input()
print('{} - чемпион!'.format(name))
print('_' * len(name))
name.lower()
print(len(name), 'п' in name, name.find('а'), sep='\n')

# 2
state = input()
capital = input()
print('Государство - {}, столица - {}'.format(state, capital))

# 3
word = 'объектно-ориентированный'
print(word[:6], word[9:17], word[14:17], word[4] + word[7] + word[5], word[10] + word[12:15] + word[19])

# 4
# Создать 2 пустых списка
a = []
b = []

# Добавить 2 вещественных числа (4.5 и 3.4) в список 'a' с помощью append
a.append(4.5)
a.append(3.4)
# Добавить 2 вещественных числа (8.7, 1.3) в список 'a' с помощью extend
a.extend([8.7, 1.3])

# Добавить 2 вещественных числа (14.5, 3.4) в список 'b' с помощью append
b.append(14.5)
b.append(3.4)

# Добавить 2 вещественных числа (8.7, 11.3) в список 'b'с помощью extend
b.extend([8.7, 11.3])

# Вставить целое число 100 на 2-е и 4-е место списка 'a'
a.insert(1, 100)
a.insert(3, 100)

# Вставить целое число 200 на 1-е и 3-е место списка 'b'
b.insert(0, 200)
b.insert(2, 200)

# Вывести списки на экран
print("Исходные списки:")
print(a)
print(b)

# Удалить первые элементы из списков 'a' и 'b'
del a[0]
del b[0]

# Удалить элемент 100 из списка 'a'
a.remove(100)
# Удалить элемент 200 из списка 'b'
b.remove(200)

# Вывести списки на экран
print("После удалений:", a, b, sep='\n')

# Создать множества из списков 'a' и 'b', а также их пересечение
sa = set(a)
sb = set(b)
sa_and_sb = sa & sb
# Вывести экран уникальные элементы каждого списка и общие
print("\nУникальные элементы:")
print(a, b, sep='\n')
print("общие:", sa_and_sb)

# Соединить списки 'a' и 'b'
c = a + b

# Отсортировать список 'c' по возрастанию и убыванию
c_asc = sorted(c)
c_desc = sorted(c, reverse=True)

# Среднее арифметическое элементов списка 'c', расположенных на четных местах
list_c1 = c[1::2]
sr_ar = sum(list_c1) / len(list_c1)
# Среднее геометрическое элементов списка 'c', расположенных на нечетных местах
list_c2 = c[::2]
import math

sr_geom = (math.prod(list_c2) ** (1 / len(list_c2)))

# Максимальный и минимальный элементы
c_max = max(c)
c_min = min(c)

# Вывести результаты на экран
print("\nИтоговые:")
print("3-й:", c)
print('Сортировка (возр.):', c_asc)
print('Сортировка (убыв.):', c_desc)
print('Ср. арифм. =', sr_ar, 'ср. геометр. =', sr_geom)
print('Макс. и мин.:', c_max, c_min)

# 5.1
# Создать пустой словарь
info = dict()

# Добавить значения для ключей "фио", "дата_рождения", "место_рождения"
info["фио"] = 'Арсеньева Алина Сергеевна'
info["дата_рождения"] = '11.04.1997'
info['место_рождения'] = 'Москва'

# Напечатать словарь
print(info)

# Создать ключ "хобби" со значением = список из строк -
# наименований хобби (например "плавание" и т.д.)
info["хобби"] = ['путешествия', 'лыжи', 'чтение', 'фильмы', 'иностранные языки']

# Добавить "программирование" в список хобби
info["хобби"].append('программирование')

# Создать ключ "животные" со значением = кортеж из строк -
# имен домашних животных (например "кошка Мурка" и т.д.)
info["животные"] = ('паук Адольф', 'питон Гвидо')

# Создать ключ "ЕГЭ" и поместить в него пустой словарь
info['ЕГЭ'] = dict()

# В словарь info["ЕГЭ"] добавить информацию о сданных экзаменах,
# где ключ - наименование предмета, а значение - количество баллов
info['ЕГЭ'] = {'русский язык': 95, 'математика': 80}

# Добавить экзамен, который не был сдан, после чего удалить его
info['ЕГЭ']['китайский язык'] = 0
del info['ЕГЭ']['китайский язык']
# Создать ключ "вузы" и поместить в него пустой словарь
info['вузы'] = dict()

# В словарь info["вузы"] добавить информацию о вузах,
# где ключ - аббревиатура вуза, а значение -
# количество баллов для специальности, на которую хотели поступить
info['вузы'] = {'мгу': 150, 'мгимо': 200}

# 2. Вывод на экран
print("Данные:")
print(info)
# Список экзаменов ЕГЭ в алфавитном порядке
# (используйте метод ``keys()``, преобразовав результат в кортеж)
exams = (sorted(info['ЕГЭ']))
print("Предметы:", exams)
# Список вузов в алфавитном порядке
uni = (sorted(info['вузы']))
print("Вузы:", uni)

# 3. Ответы на вопросы
print("\nОтветы на вопросы:")

# Выделить имя из info["фио"]
name = info["фио"][10:16]
# Начинается на гласную? (True/False)
starts_with_vowel = name[0] == 'А'
print("* мое имя начинается на гласную букву:", starts_with_vowel)

# Выделить месяц из info["дата_рождения"]
month = info["дата_рождения"][3:5]
# Родился зимой или летом? (True/False)
summer = ["06", "07", "08"]
winter = ["12", "01", "02"]
born_in_winter_or_summer = month in summer or month in winter
print("* родилась летом или зимой:", born_in_winter_or_summer)

# Количество хобби и первое из них
hobbies_count = len(info["хобби"])
print("* у меня {} хобби, первое \"{}\"".format(hobbies_count, info["хобби"][0]))

# Количество сданных экзаменов
print("* после окончания школы сдавала {} экз.".format(len(info['ЕГЭ'])))

# Сумма баллов по экзаменам
sum_mark = sum(info['ЕГЭ'].values())
print("* сумма баллов = {}".format(sum_mark))

# Максимальный балл среди сданных
max_mark = max(info['ЕГЭ'].values())
print("* макс. балл = {}".format(max_mark))

# Количество вузов, в которые Вы проходите по баллам
# Подсказка: определить, проходите Вы или нет, можно простым сравнением
# суммы баллов с проходным баллом вуза - ``True/False``.
# Для того, чтобы определить количество таких вузов, преобразуйте
# сравнение в целое число (используя ``int()``) и сложите все сравниваемые вузы.
vuz_count = int(sum_mark > info['вузы']['мгу']) + int(sum_mark > info['вузы']['мгимо'])
print("* кол-во вузов в которые прохожу: {}".format(vuz_count))
